name: Build Macos Wheels

on: [workflow_dispatch]
env:
  CONAN_REVISIONS_ENABLED: 1
  CONAN_DISABLE_CHECK_COMPILER: 1
jobs:
  build-mac-win:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-12, macos-14]
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11', '3.12']
        exclude:
         - os: macos-14
           python-version: '3.7'

    steps:
    - name: Setup cmake
      uses: jwlawson/actions-setup-cmake@v2
          
    - name: display cmake version
      run: cmake --version
  
    - name: checkout
      uses: actions/checkout@v4
      with:
        submodules: 'true'
      
    - uses: conda-incubator/setup-miniconda@v3
      with:
        auto-activate-base: true
        activate-environment: ""

    - name: Create and activate conda environments
      shell: bash -el {0}
      run: |
        conda create -n py${{ matrix.python-version }} python=${{ matrix.python-version }} -y
        conda activate py${{ matrix.python-version }}
        python --version
        python -m pip install conan==1.65.0
        conan remote add digitalo ${{ secrets.CONAN_SERVER }}
        conan user -r digitalo -p ${{ secrets.CONAN_PASSWORD }} ${{ secrets.CONAN_USER }}
        python -m pip install numpy
        python -m pip install wheel

  
    - name: install dependencies
      shell: bash -el {0}
      run: |
        conda activate py${{ matrix.python-version }}
        python install.py -a conan -c release

    - name: build wheels
      working-directory: ./src
      shell: bash -el {0}
      run: |
        conda activate py${{ matrix.python-version }}
        source ../define_python_env.sh
        python setup.py sdist bdist_wheel

    - name: Install wheel and run tests
      shell: bash  -el {0}
      continue-on-error: true
      run: |
        conda activate py${{ matrix.python-version }}
        wheelFile=$(find ./src/dist -name "*.whl" | head -n 1)
        echo "Installing wheel $wheelFile"
        python -m pip install "$wheelFile"
        python ./tests/test.py

    - uses: actions/upload-artifact@v4
      with:
        name: slideio- ${{ matrix.os }}-whl-${{ matrix.python-version }}
        path: ./src/dist/*.whl
  