name: Windows test

on: [workflow_dispatch]
env:
  CONAN_REVISIONS_ENABLED: 1
  CONAN_DISABLE_CHECK_COMPILER: 1
jobs:
  build-mac-win:
    runs-on: windows-2019
    strategy:
      matrix:
        python-version: ['3.10', '3.11']

    steps:
    - name: Setup cmake
      uses: jwlawson/actions-setup-cmake@v2
          
    - name: display cmake version
      run: cmake --version
  
    - name: checkout
      uses: actions/checkout@v4
      with:
        submodules: 'true'
      
    - uses: conda-incubator/setup-miniconda@v3
      with:
        auto-activate-base: true
        activate-environment: ""

    - name: Create and activate conda environments
      run: |
        conda create -n py${{ matrix.python-version }} python=${{ matrix.python-version }} -y
        conda activate py${{ matrix.python-version }}
        python --version

    - name: Run tests for Python ${{ matrix.python-version }}
      run: |
        conda activate py${{ matrix.python-version }}

    - name: Install Conan
      id: conan
      uses: turtlebrowser/get-conan@main
      with:
        version: 1.65.0
  
    - name: Conan preparation
      run: |
        echo "${{ steps.conan.outputs.version }}"
        conan remote add digitalo ${{ secrets.CONAN_SERVER }} 

    - name: perpare environment
      run: |
        python -m pip install numpy
        python -m pip install wheel

    - name: build wheels
      working-directory: ./src
      shell: pwsh
      run: |
        $pythonPath = (Get-Command python).Source
        $pythonDir = Split-Path -Parent $pythonPath
        $pythonLibDir = Join-Path $pythonDir "libs"
        $version = ${{ matrix.python-version }}

        $env:PYTHON_EXECUTABLE = $pythonPath
        $env:Python3_EXECUTABLE = $pythonPath
        $pythonVersion = (python --version).Split()[1]
        $env:Python3_VERSION = $pythonVersion
        $env:Python3_INCLUDE_DIRS = Join-Path $pythonDir "include"
        $env:Python3_LIBRARY_DIRS = $pythonLibDir
        $env:Python3_NumPy_INCLUDE_DIRS = python -c "import numpy; print(numpy.get_include())"
        $env:Python3_LIBRARIES = Join-Path $pythonLibDir "python$($version.Replace('.', '')).lib"
        $env:PYTHON_LOCATION_IS_SET = 1

        Write-Host "Python path: $pythonPath"
        Write-Host "Python directory: $pythonDir"        
        
        # Build distributable
        Write-Host "Executing command in conda environment for Python $version"
        python --version
        Write-Host "Installing wheel in conda environment for Python $version"
    
        python setup.py sdist bdist_wheel
        Get-ChildItem -Path .\dist  